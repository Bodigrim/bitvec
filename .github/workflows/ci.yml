name: ci
on:
  push:
    branches:
      - master
  pull_request: {}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc: ['9.0', '8.10', '8.8.4', '8.8.2', '8.8.1', '8.6', '8.4', '8.2', '8.0']
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: 'latest'
    - uses: actions/cache@v2
      name: Cache cabal stuff
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-
    - name: Build
      run: |
        cabal test -flibgmp
        cabal test
        cabal bench --benchmark-option=-l
        cabal haddock
        cabal sdist

  emulated:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        arch: ['s390x', 'ppc64le']
    steps:
    - uses: actions/checkout@v2
    - uses: uraimo/run-on-arch-action@v2.1.1
      timeout-minutes: 60
      with:
        arch: ${{ matrix.arch }}
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        install: |
          apt-get update -y
          apt-get install -y ghc libghc-vector-dev libghc-tasty-quickcheck-dev libghc-tasty-hunit-dev
        run: |
          ghc --version
          echo "#define BOUNDS_CHECK(f) (\_ _ _ -> id)" > src/vector.h
          ghc --make -Isrc:test -isrc:test -o Tests test/Main.hs +RTS -s
          ./Tests +RTS -s
